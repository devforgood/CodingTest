#include <iostream>
#include <stack>
#include <string>
#include <algorithm>
#include <memory.h>
#include <limits.h>

using namespace std;


int n, m;
int arr[101] = { 0, };
int cost[101] = { 0, };
int dp[101][10001];

/*
* +		[0]	0x0021c470 {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...}	int[10001]
+		[1]	0x002260b4 {0, 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...}	int[10001]
+		[2]	0x0022fcf8 {10, 10, 10, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 0, 0, 0, 0, 0, 0, 0, 0, ...}	int[10001]
+		[3]	0x0023993c {10, 10, 10, 40, 40, 40, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 0, 0, 0, 0, 0, 0, 0, 0, ...}	int[10001]
+		[4]	0x00243580 {10, 10, 10, 40, 40, 45, 60, 60, 75, 75, 75, 95, 95, 95, 95, 95, 0, 0, 0, 0, 0, 0, 0, 0, ...}	int[10001]
+		[5]	0x0024d1c4 {10, 10, 10, 40, 50, 50, 60, 80, 80, 85, 100, 100, 115, 115, 115, 135, 0, 0, 0, 0, 0, 0, ...}	int[10001]

*/

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);


	cin >> n >> m;

	for (int i = 1; i <= n; ++i)
		cin >> arr[i];

	int sum = 0;
	for (int i = 1; i <= n; ++i)
	{
		cin >> cost[i];
		sum += cost[i];
	}


	for (int i = 1; i <= n; i++)
	{
		for (int j = 0; j <= sum; j++)
		{
			if (j < cost[i])
			{
				dp[i][j] =  dp[i - 1][j];
			}
			else
			{
				// 적은 비용으로 큰 메모리 용량
				dp[i][j] = max(dp[i-1][j], dp[i - 1][j - cost[i]] + arr[i]);
			}

		}
	}


	// n번째 조합에서 최소 비용으로 m크기를 달성했을 경우
	for (int i = 0; i <= sum; ++i)
	{
		if (dp[n][i] >= m)
		{
			cout << i << "\n";
			break;
		}
	}
}

